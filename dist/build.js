(function (global, factory) {
  if (typeof define === 'function' && define.amd) {
    define(['exports', 'fs', 'path', 'systemjs-builder', 'gulp-load-plugins', 'run-sequence', './clean', './script', './style', './utils', './paths', './_gulp'], factory);
  } else if (typeof exports !== 'undefined') {
    factory(exports, require('fs'), require('path'), require('systemjs-builder'), require('gulp-load-plugins'), require('run-sequence'), require('./clean'), require('./script'), require('./style'), require('./utils'), require('./paths'), require('./_gulp'));
  } else {
    var mod = {
      exports: {}
    };
    factory(mod.exports, global.fs, global.path, global.Builder, global.gulpLoadPlugins, global.runSequence, global.clean, global.script, global.style, global.utils, global.paths, global.gulp);
    global.build = mod.exports;
  }
})(this, function (exports, _fs, _path, _systemjsBuilder, _gulpLoadPlugins, _runSequence, _clean, _script, _style, _utils, _paths, _gulp) {
  'use strict';

  Object.defineProperty(exports, '__esModule', {
    value: true
  });
  exports.makeSettings = makeSettings;

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

  var _fs2 = _interopRequireDefault(_fs);

  var _path2 = _interopRequireDefault(_path);

  var _Builder = _interopRequireDefault(_systemjsBuilder);

  var _gulpLoadPlugins2 = _interopRequireDefault(_gulpLoadPlugins);

  var _runSequence2 = _interopRequireDefault(_runSequence);

  var _gulp2 = _interopRequireDefault(_gulp);

  var $ = (0, _gulpLoadPlugins2['default'])();

  function makeSettings(environments) {
    _gulp2['default'].task('build:make-settings', function () {
      var env = process.env.ENV || 'development';
      var outfile = _path2['default'].join(_paths.SRC_DIR, _paths.SETTINGS);
      var settings = environments[env];
      $.util.log(settings);

      return _fs2['default'].writeFileSync(outfile, '// Auto generated by gulp task\n  // Do **not** modify manually unless you know what you\'re doing\n  /* eslint-disable */\n  const settings = Object.freeze(' + JSON.stringify(settings) + ');\n  export default settings;');
    });
  }

  _gulp2['default'].task('build:jspm', ['compile:styles', 'js:lint'], function (cb) {
    var builder = new _Builder['default'](_paths.TMP_DIR, _path2['default'].join(_paths.TMP_DIR, 'config.js'));
    return builder.buildStatic(_paths.INDEX_SCRIPT, _paths.BUILD_INDEX_JS, { runtime: true })['catch'](function (err) {
      return cb(err);
    });
  });

  _gulp2['default'].task('build:js', function (callback) {
    return (0, _runSequence2['default'])('build:jspm', 'js:replace_paths', callback);
  });

  _gulp2['default'].task('build:html', function () {
    return _gulp2['default'].src(_paths.SRC_INDEX_HTML).pipe($.htmlReplace({ 'js': _paths.INDEX_SCRIPT })).pipe(_gulp2['default'].dest(_paths.BUILD_DIR));
  });

  _gulp2['default'].task('build:images', function () {
    return _gulp2['default'].src(_paths.TMP_IMAGE).pipe($.imagemin({
      progressive: true,
      interlaced: true
    })).pipe(_gulp2['default'].dest(_paths.BUILD_DIR));
  });

  _gulp2['default'].task('build', function (callback) {
    return (0, _runSequence2['default'])(['clean:build', 'build:make-settings', 'utils:copy_to_tmp'], ['build:js', 'build:html', 'build:images'], callback);
  });
});