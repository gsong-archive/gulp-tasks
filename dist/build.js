'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.makeSettings = makeSettings;

var _fs = require('fs');

var _fs2 = _interopRequireDefault(_fs);

var _path = require('path');

var _path2 = _interopRequireDefault(_path);

var _systemjsBuilder = require('systemjs-builder');

var _systemjsBuilder2 = _interopRequireDefault(_systemjsBuilder);

var _gulpLoadPlugins = require('gulp-load-plugins');

var _gulpLoadPlugins2 = _interopRequireDefault(_gulpLoadPlugins);

var _runSequence = require('run-sequence');

var _runSequence2 = _interopRequireDefault(_runSequence);

require('./clean');

require('./script');

require('./style');

require('./utils');

var _paths = require('./paths');

var paths = _interopRequireWildcard(_paths);

var _gulp = require('./_gulp');

var _gulp2 = _interopRequireDefault(_gulp);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var $ = (0, _gulpLoadPlugins2.default)();

function makeSettings(environments) {
  _gulp2.default.task('build:make-settings', function () {
    var env = process.env.ENV || 'development';
    var outfile = _path2.default.join(paths.SRC_DIR, paths.SETTINGS);
    var settings = environments[env];
    $.util.log(settings);

    return _fs2.default.writeFileSync(outfile, '// Auto generated by gulp task\n  // Do **not** modify manually unless you know what you\'re doing\n  /* eslint-disable */\n  const settings = Object.freeze(' + JSON.stringify(settings) + ');\n  export default settings;');
  });
}

_gulp2.default.task('build:jspm', ['compile:styles', 'js:lint'], function (cb) {
  var builder = new _systemjsBuilder2.default(paths.TMP_DIR, _path2.default.join(paths.TMP_DIR, 'config.js'));
  return builder.buildStatic(paths.INDEX_SCRIPT, paths.BUILD_INDEX_JS, { runtime: true }).catch(function (err) {
    return cb(err);
  });
});

_gulp2.default.task('build:js', function (callback) {
  return (0, _runSequence2.default)('build:jspm', 'js:replace_paths', callback);
});

_gulp2.default.task('build:html', function () {
  return _gulp2.default.src(paths.SRC_INDEX_HTML).pipe($.htmlReplace({ 'js': paths.INDEX_SCRIPT })).pipe(_gulp2.default.dest(paths.BUILD_DIR));
});

_gulp2.default.task('build:images', function () {
  return _gulp2.default.src(paths.TMP_IMAGE).pipe($.imagemin({
    progressive: true,
    interlaced: true
  })).pipe(_gulp2.default.dest(paths.BUILD_DIR));
});

_gulp2.default.task('build', function (callback) {
  return (0, _runSequence2.default)(['clean:build', 'build:make-settings', 'utils:copy_to_tmp'], ['build:js', 'build:html', 'build:images'], callback);
});